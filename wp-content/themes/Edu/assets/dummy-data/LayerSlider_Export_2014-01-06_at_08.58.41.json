["{\"properties\":{\"title\":\"Edu FullWidth Slider\",\"width\":\"100%\",\"height\":\"500px\",\"forceresponsive\":\"on\",\"responsiveunder\":\"960\",\"sublayercontainer\":\"960\",\"autostart\":\"on\",\"pauseonhover\":\"on\",\"firstlayer\":\"1\",\"animatefirstlayer\":\"on\",\"twowayslideshow\":\"on\",\"loops\":\"0\",\"forceloopnum\":\"on\",\"autopauseslideshow\":\"auto\",\"youtubepreview\":\"maxresdefault.jpg\",\"keybnav\":\"on\",\"touchnav\":\"on\",\"skin\":\"fullwidth\",\"backgroundcolor\":\"\",\"backgroundimage\":\"\",\"sliderstyle\":\"\",\"navprevnext\":\"on\",\"thumb_nav\":\"hover\",\"thumb_width\":\"100\",\"thumb_height\":\"60\",\"thumb_container_width\":\"60%\",\"thumb_active_opacity\":\"35\",\"thumb_inactive_opacity\":\"100\",\"imgpreload\":\"on\",\"yourlogo\":\"\",\"yourlogostyle\":\"left: 10px; top: 10px;\",\"yourlogolink\":\"\",\"yourlogotarget\":\"_self\",\"cbinit\":\"function(element) { }\",\"cbstart\":\"function(data) { }\",\"cbstop\":\"function(data) { }\",\"cbpause\":\"function(data) { }\",\"cbanimstart\":\"function(data) { }\",\"cbanimstop\":\"function(data) { }\",\"cbprev\":\"function(data) { }\",\"cbnext\":\"function(data) { }\"},\"layers\":[{\"properties\":{\"3d_transitions\":\"47,48\",\"2d_transitions\":\"\",\"custom_3d_transitions\":\"\",\"custom_2d_transitions\":\"\",\"background\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/slide-intro.jpg\",\"thumbnail\":\"\",\"slidedelay\":\"4000\",\"new_transitions\":\"on\",\"slidedirection\":\"right\",\"timeshift\":\"0\",\"durationin\":\"1500\",\"easingin\":\"easeInOutQuint\",\"delayin\":\"0\",\"durationout\":\"1500\",\"easingout\":\"easeInOutQuint\",\"delayout\":\"0\",\"layer_link\":\"\",\"layer_link_target\":\"_self\",\"id\":\"\",\"deeplink\":\"\"},\"sublayers\":[{\"subtitle\":\"Layer #1\",\"type\":\"img\",\"image\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/logo-slide.png\",\"html\":\"\",\"slidedirection\":\"top\",\"durationin\":\"1000\",\"easingin\":\"easeOutExpo\",\"delayin\":\"0\",\"rotatein\":\"0\",\"scalein\":\"1.0\",\"slideoutdirection\":\"fade\",\"durationout\":\"1000\",\"easingout\":\"easeOutExpo\",\"delayout\":\"0\",\"rotateout\":\"0\",\"scaleout\":\"0\",\"level\":\"-1\",\"showuntil\":\"0\",\"url\":\"\",\"target\":\"_self\",\"styles\":\"{}\",\"top\":\"127px\",\"left\":\"339px\",\"style\":\"\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"}]},{\"properties\":{\"3d_transitions\":\"\",\"2d_transitions\":\"4,24,25,27,28\",\"custom_3d_transitions\":\"\",\"custom_2d_transitions\":\"\",\"background\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/slide-1.jpg\",\"thumbnail\":\"\",\"slidedelay\":\"4000\",\"new_transitions\":\"on\",\"slidedirection\":\"right\",\"timeshift\":\"0\",\"durationin\":\"1500\",\"easingin\":\"easeInOutQuint\",\"delayin\":\"0\",\"durationout\":\"1500\",\"easingout\":\"easeInOutQuint\",\"delayout\":\"0\",\"layer_link\":\"\",\"layer_link_target\":\"_self\",\"id\":\"\",\"deeplink\":\"\"},\"sublayers\":[{\"subtitle\":\"Layer #1\",\"type\":\"img\",\"image\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/diagram.png\",\"html\":\"+\",\"slidedirection\":\"fade\",\"durationin\":\"300\",\"easingin\":\"easeOutExpo\",\"delayin\":\"1000\",\"rotatein\":\"90\",\"scalein\":\".5\",\"slideoutdirection\":\"fade\",\"durationout\":\"300\",\"easingout\":\"easeOutExpo\",\"delayout\":\"0\",\"rotateout\":\"-90\",\"scaleout\":\".5\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"\",\"target\":\"_self\",\"styles\":\"{\\\\\\\"font-family\\\\\\\":\\\\\\\"Arial, sans-serif\\\\\\\",\\\\\\\"line-height\\\\\\\":\\\\\\\"50px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#3b173d\\\\\\\"}\",\"top\":\"132px\",\"left\":\"317px\",\"style\":\" font-weight: normal; text-align: center;\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"},{\"subtitle\":\"Layer #2\",\"type\":\"img\",\"image\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/icon-slide-1.png\",\"html\":\"you can add the slider elements into a centered container in full width mode\",\"slidedirection\":\"auto\",\"durationin\":\"300\",\"easingin\":\"easeOutExpo\",\"delayin\":\"2000\",\"rotatein\":\"180\",\"scalein\":\".0\",\"slideoutdirection\":\"auto\",\"durationout\":\"1000\",\"easingout\":\"easeOutExpo\",\"delayout\":\"0\",\"rotateout\":\"0\",\"scaleout\":\".0\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"\",\"target\":\"_self\",\"styles\":\"{\\\\\\\"font-family\\\\\\\":\\\\\\\"Arial, sans-serif\\\\\\\",\\\\\\\"font-size\\\\\\\":\\\\\\\"22px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#eee\\\\\\\"}\",\"top\":\"111px\",\"left\":\"149px\",\"style\":\" font-weight: normal;\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"},{\"subtitle\":\"Layer #3\",\"type\":\"img\",\"image\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/icon-slide-2.png\",\"html\":\"\",\"slidedirection\":\"auto\",\"durationin\":\"300\",\"easingin\":\"easeOutExpo\",\"delayin\":\"2500\",\"rotatein\":\"180\",\"scalein\":\"0\",\"slideoutdirection\":\"auto\",\"durationout\":\"1000\",\"easingout\":\"easeOutExpo\",\"delayout\":\"0\",\"rotateout\":\"0\",\"scaleout\":\"0\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"\",\"target\":\"_self\",\"styles\":\"{}\",\"top\":\"339px\",\"left\":\"158px\",\"style\":\"\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"},{\"subtitle\":\"Layer #4\",\"type\":\"img\",\"image\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/icon-slide-3.png\",\"html\":\"\",\"slidedirection\":\"auto\",\"durationin\":\"300\",\"easingin\":\"easeOutExpo\",\"delayin\":\"3000\",\"rotatein\":\"180\",\"scalein\":\"0\",\"slideoutdirection\":\"auto\",\"durationout\":\"1000\",\"easingout\":\"easeOutExpo\",\"delayout\":\"0\",\"rotateout\":\"0\",\"scaleout\":\"0\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"\",\"target\":\"_self\",\"styles\":\"{}\",\"top\":\"109px\",\"left\":\"656px\",\"style\":\"\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"},{\"subtitle\":\"Layer #5\",\"type\":\"img\",\"image\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/icon-slide-4.png\",\"html\":\"\",\"slidedirection\":\"auto\",\"durationin\":\"300\",\"easingin\":\"easeOutExpo\",\"delayin\":\"3500\",\"rotatein\":\"180\",\"scalein\":\"0\",\"slideoutdirection\":\"auto\",\"durationout\":\"1000\",\"easingout\":\"easeOutExpo\",\"delayout\":\"0\",\"rotateout\":\"0\",\"scaleout\":\"0\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"\",\"target\":\"_self\",\"styles\":\"{}\",\"top\":\"337px\",\"left\":\"647px\",\"style\":\"\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"}]},{\"properties\":{\"3d_transitions\":\"\",\"2d_transitions\":\"3,4,17,30\",\"custom_3d_transitions\":\"\",\"custom_2d_transitions\":\"\",\"background\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/slide-2.jpg\",\"thumbnail\":\"\",\"slidedelay\":\"4000\",\"new_transitions\":\"on\",\"slidedirection\":\"right\",\"timeshift\":\"0\",\"durationin\":\"1500\",\"easingin\":\"easeInOutQuint\",\"delayin\":\"0\",\"durationout\":\"1500\",\"easingout\":\"easeInOutQuint\",\"delayout\":\"0\",\"layer_link\":\"\",\"layer_link_target\":\"_self\",\"id\":\"\",\"deeplink\":\"\"},\"sublayers\":[{\"subtitle\":\"+\",\"type\":\"span\",\"image\":\"\",\"html\":\"Read more\",\"slidedirection\":\"fade\",\"durationin\":\"750\",\"easingin\":\"easeOutQuint\",\"delayin\":\"0\",\"rotatein\":\"90\",\"scalein\":\".5\",\"slideoutdirection\":\"fade\",\"durationout\":\"750\",\"easingout\":\"easeInOutQuint\",\"delayout\":\"0\",\"rotateout\":\"-90\",\"scaleout\":\".5\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"#\",\"target\":\"_self\",\"styles\":\"{\\\\\\\"padding-top\\\\\\\":\\\\\\\"8\\\\\\\",\\\\\\\"padding-right\\\\\\\":\\\\\\\"30\\\\\\\",\\\\\\\"padding-bottom\\\\\\\":\\\\\\\"8\\\\\\\",\\\\\\\"padding-left\\\\\\\":\\\\\\\"30\\\\\\\",\\\\\\\"font-family\\\\\\\":\\\\\\\"Arial, sans-serif\\\\\\\",\\\\\\\"font-size\\\\\\\":\\\\\\\"18px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#ffffff\\\\\\\",\\\\\\\"background\\\\\\\":\\\\\\\"#099ad1\\\\\\\",\\\\\\\"border-radius\\\\\\\":\\\\\\\"3\\\\\\\"}\",\"top\":\"248px\",\"left\":\"811px\",\"style\":\" font-weight: normal; text-align: center;\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"},{\"subtitle\":\"full width slider can be also responsive under a value of width\",\"type\":\"h5\",\"image\":\"\",\"html\":\"JOIN THE COMMUNITY\",\"slidedirection\":\"fade\",\"durationin\":\"1000\",\"easingin\":\"easeOutQuint\",\"delayin\":\"300\",\"rotatein\":\"0\",\"scalein\":\".8\",\"slideoutdirection\":\"fade\",\"durationout\":\"750\",\"easingout\":\"easeInOutQuint\",\"delayout\":\"0\",\"rotateout\":\"0\",\"scaleout\":\".8\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"\",\"target\":\"_self\",\"styles\":\"{\\\\\\\"padding-top\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"padding-right\\\\\\\":\\\\\\\"15\\\\\\\",\\\\\\\"padding-bottom\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"padding-left\\\\\\\":\\\\\\\"15\\\\\\\",\\\\\\\"font-family\\\\\\\":\\\\\\\"Arial, sans-serif\\\\\\\",\\\\\\\"font-size\\\\\\\":\\\\\\\"45px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#ffffff\\\\\\\",\\\\\\\"background\\\\\\\":\\\\\\\"#2d343e\\\\\\\"}\",\"top\":\"182px\",\"left\":\"436px\",\"style\":\" font-weight: normal;\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"}]},{\"properties\":{\"3d_transitions\":\"\",\"2d_transitions\":\"all\",\"custom_3d_transitions\":\"\",\"custom_2d_transitions\":\"\",\"background\":\"http:\\\/\\\/demo.smooththemes.com\\\/edu\\\/wp-content\\\/uploads\\\/2013\\\/09\\\/slide-3.jpg\",\"thumbnail\":\"\",\"slidedelay\":\"4000\",\"new_transitions\":\"on\",\"slidedirection\":\"right\",\"timeshift\":\"0\",\"durationin\":\"1500\",\"easingin\":\"easeInOutQuint\",\"delayin\":\"0\",\"durationout\":\"1500\",\"easingout\":\"easeInOutQuint\",\"delayout\":\"0\",\"layer_link\":\"\",\"layer_link_target\":\"_self\",\"id\":\"\",\"deeplink\":\"\"},\"sublayers\":[{\"subtitle\":\"+\",\"type\":\"span\",\"image\":\"\",\"html\":\"Read more\",\"slidedirection\":\"fade\",\"durationin\":\"750\",\"easingin\":\"easeOutQuint\",\"delayin\":\"0\",\"rotatein\":\"90\",\"scalein\":\".5\",\"slideoutdirection\":\"fade\",\"durationout\":\"750\",\"easingout\":\"easeInOutQuint\",\"delayout\":\"0\",\"rotateout\":\"-90\",\"scaleout\":\".5\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"#\",\"target\":\"_self\",\"styles\":\"{\\\\\\\"padding-top\\\\\\\":\\\\\\\"8\\\\\\\",\\\\\\\"padding-right\\\\\\\":\\\\\\\"30\\\\\\\",\\\\\\\"padding-bottom\\\\\\\":\\\\\\\"8\\\\\\\",\\\\\\\"padding-left\\\\\\\":\\\\\\\"30\\\\\\\",\\\\\\\"font-family\\\\\\\":\\\\\\\"Arial, sans-serif\\\\\\\",\\\\\\\"font-size\\\\\\\":\\\\\\\"18px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#ffffff\\\\\\\",\\\\\\\"background\\\\\\\":\\\\\\\"#099ad1\\\\\\\",\\\\\\\"border-radius\\\\\\\":\\\\\\\"3\\\\\\\"}\",\"top\":\"246px\",\"left\":\"800px\",\"style\":\" font-weight: normal; text-align: center;\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"},{\"subtitle\":\"full width slider can be also responsive under a value of width\",\"type\":\"h5\",\"image\":\"\",\"html\":\"DIFFERENT COURSES AVAILABLE\",\"slidedirection\":\"fade\",\"durationin\":\"1000\",\"easingin\":\"easeOutQuint\",\"delayin\":\"300\",\"rotatein\":\"0\",\"scalein\":\".8\",\"slideoutdirection\":\"fade\",\"durationout\":\"750\",\"easingout\":\"easeInOutQuint\",\"delayout\":\"0\",\"rotateout\":\"0\",\"scaleout\":\".8\",\"level\":\"-1\",\"showuntil\":\"4000\",\"url\":\"\",\"target\":\"_self\",\"styles\":\"{\\\\\\\"padding-top\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"padding-right\\\\\\\":\\\\\\\"15\\\\\\\",\\\\\\\"padding-bottom\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"padding-left\\\\\\\":\\\\\\\"15\\\\\\\",\\\\\\\"font-family\\\\\\\":\\\\\\\"Arial, sans-serif\\\\\\\",\\\\\\\"font-size\\\\\\\":\\\\\\\"45px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#ffffff\\\\\\\",\\\\\\\"background\\\\\\\":\\\\\\\"#2d343e\\\\\\\"}\",\"top\":\"180px\",\"left\":\"188px\",\"style\":\" font-weight: normal;\",\"id\":\"\",\"class\":\"\",\"title\":\"\",\"alt\":\"\",\"rel\":\"\"}]}]}"]